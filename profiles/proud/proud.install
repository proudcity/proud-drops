<?php
/**
 * @file
 * Install, update and uninstall functions for the proud install profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function proud_install() {
  theme_enable(array('proudtheme'));
  variable_set('theme_default', 'proudtheme');

  
  // Insert default pre-defined RDF mapping into the database.
  /*$rdf_mappings = array(
    array(
      'type' => 'node',
      'bundle' => 'page',
      'mapping' => array(
        'rdftype' => array('foaf:Document'),
      ),
    ),
    array(
      'type' => 'node',
      'bundle' => 'article',
      'mapping' => array(
        'field_image' => array(
          'predicates' => array('og:image', 'rdfs:seeAlso'),
          'type' => 'rel',
        ),
        'field_tags' => array(
          'predicates' => array('dc:subject'),
          'type' => 'rel',
        ),
      ),
    ),
  );
  foreach ($rdf_mappings as $rdf_mapping) {
    rdf_mapping_save($rdf_mapping);
  }*/


  // Enable user picture support and set the default to a square thumbnail option.
  variable_set('user_pictures', '0');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_style', 'thumbnail');

  // Allow visitor account creation with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  // Zurb Foundation needs jQuery 1.7
  variable_set('jquery_update_jquery_version', '1.7');
  variable_set('jquery_update_jquery_admin_version', '1.7');

  // Enable the admin theme.
  $admin_theme = 'minimalist_admin';
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $admin_theme)
    ->execute();
  variable_set('admin_theme', $admin_theme);
  variable_set('node_admin_theme', '1');

  // Set admin_menu as the admin_select toolbar for uid=1
  $account = user_load(1);
  $edit = array();
  $edit['data']['admin_select'] = 'admin_menu';
  user_save($account, $edit);

  // Note: Text formats are added as part of the proud_input_formats feature


  // Call hook_install()s that need to be called after features have been run and installed
  // (this is mostly for permissions)
  cache_clear_all();
  module_invoke_all('proud_post_install');
}


/**
 * Implements hook_install_tasks_alter()
 */
function proud_install_tasks_alter(&$tasks, $install_state) {
  // @todo: re-enable this?
  //install_from_db_install_tasks_alter($tasks, $install_state);
  //print_r($tasks);
  //die();
}
