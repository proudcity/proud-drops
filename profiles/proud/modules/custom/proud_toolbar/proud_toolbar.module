<?php

/**
 * @file
 * Administration proud_toolbar for quick access to top level administration items.
 */


/**
 * Implements hook_permission().
 */
function proud_toolbar_permission() {
  return array(
    'access proud toolbar' => array(
      'title' => t('Use the Proud Toolbar'),
      'description' => t('Use the Proud Toolbar unless admin_menu is available'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function proud_toolbar_theme($existing, $type, $theme, $path) {
  $items['proud_toolbar'] = array(
    'render element' => 'toolbar',
    'template' => 'proud-toolbar',
    'path' => drupal_get_path('module', 'proud_toolbar'),
  );
  return $items;
}

/**
 * Implements hook_menu().
 */
//function proud_toolbar_menu() {
  /*$items['proud_toolbar/toggle'] = array(
    'title' => 'Toggle drawer visibility',
    'type' => MENU_CALLBACK,
    'page callback' => 'proud_toolbar_toggle_page',
    'access arguments' => array('access proud toolbar'),
  );*/
  //return $items;
//}

/**
 * Implements hook_page_build().
 *
 * Add admin proud_toolbar to the page_top region automatically.
 */
function proud_toolbar_page_build(&$page) {
  $page['page_top']['proud_toolbar'] = array(
    '#pre_render' => array('proud_toolbar_pre_render'),
    '#access' => user_access('access proud toolbar'),
  );
}

/**
 * Prerender function for the proud_toolbar.
 *
 * Since building the proud_toolbar takes some time, it is done just prior to
 * rendering to ensure that it is built only if it will be displayed.
 */
function proud_toolbar_pre_render($proud_toolbar) {
  if (!(module_exists('admin_menu') && user_access('access administration menu'))) {
    $proud_toolbar = array_merge($proud_toolbar, proud_toolbar_view());
  }
  return $proud_toolbar;
}

/**
 * Implements hook_preprocess_html().
 *
 * Add some page classes, so global page theming can adjust to the proud_toolbar.
 */
function proud_toolbar_preprocess_html(&$vars) {
  if (isset($vars['page']['page_top']['proud_toolbar']) && user_access('access proud toolbar')) {
    $vars['classes_array'][] = 'proud-toolbar-active';
  }
}

/**
 * Implements hook_preprocess_proud_toolbar().
 *
 * Adding the 'overlay-displace-top' class to the proud_toolbar pushes the overlay
 * down, so it appears below the proud_toolbar.
 */
function proud_toolbar_preprocess_proud_toolbar(&$variables) {
  $variables['classes_array'][] = "overlay-displace-top";
}

/**
 * Implements hook_system_info_alter().
 *
 * Indicate that the 'page_top' region (in which the proud_toolbar will be displayed)
 * is an overlay supplemental region that should be refreshed whenever its
 * content is updated.
 *
 * This information is provided for any module that might need to use it, not
 * just the core Overlay module.
 */
function proud_toolbar_system_info_alter(&$info, $file, $type) {
  if ($type == 'theme') {
    $info['overlay_supplemental_regions'][] = 'page_top';
  }
}

/**
 * Builds the admin menu as a structured array ready for drupal_render().
 *
 * @return
 *   Array of links and settings relating to the admin menu.
 */
function proud_toolbar_view() {
  global $user;

  $module_path = drupal_get_path('module', 'proud_toolbar');
  $build = array(
    '#theme' => 'proud_toolbar',
    '#attached'=> array(
      'css' => array(
        $module_path . '/css/proud-toolbar.css',
      ),
      'js' => array(
        $module_path . '/js/proud-toolbar.js',
        array(
          'data' => array('proud_toolbar' => array(
            'icons' => (int)variable_get('proud_toolbar_icons', TRUE),
            'move_local_tasks' => variable_get('proud_toolbar_move_local_tasks', TRUE),
            'move_panels_ipe' => variable_get('proud_toolbar_move_panels_ipe', TRUE),
          )),
          'type' => 'setting'
        ),
      )
    ),
  );

  // Retrieve the admin menu from the database.
  /*$build['menu'] = array(
    //'#theme' => 'links__proud_toolbar_menu',
    '#links' => $links,
    '#attributes' => array('id' => 'proud_toolbar-menu'),
    '#heading' => array('text' => t('Administrative proud_toolbar'), 'level' => 'h2', 'class' => 'element-invisible'),
  );*/
  $build['toolbar_menu'] = menu_tree('menu-admin');


  $build['toolbar_user_name'] = $user->mail;
  $build['toolbar_user_picture'] = theme('user_picture', array('account' => $user));
  $build['toolbar_user_menu'] = menu_tree('user-menu');

  // Add a "home" link.
  $link = array(
    'home' => array(
      'title' => variable_get('proud_toolbar_icons', TRUE) ? '<i class="fa fa-home"></i>' : 'Home',
      'href' => '<front>',
      'html' => TRUE,
      'attributes' => array('title' => t('Home')),
    ),
  );
  $build['toolbar_home'] = array(
    '#theme' => 'links',
    '#links' => $link,
    '#attributes' => array('class' => array('nav navbar-nav')),
  );

  $build['#theme'] = 'proud_toolbar';

  return $build;
}
